version: '3.4'

services:
  kafka:
    restart: always
    container_name: kafka    
    image: 'spotify/kafka:latest'
    hostname: kafka
    ports:
      - '9092:9092'
      - '2181:2181'
    volumes:
      - ./kafka-logs:/tmp/kafka-logs
    environment: 
      - ADVERTISED_PORT=9092
      - ADVERTISED_HOST=172.20.1.3
    networks:
      fictizia_kafka:
        ipv4_address: 172.20.1.3

  consumer:
    restart: always
    build: ./consumer
    container_name: consumer
    depends_on:
      - kafka
    networks:
      fictizia_kafka:
        ipv4_address: 172.20.1.4

  producer:
    restart: on-failure
    build: ./producer
    container_name: producer
    depends_on:
      - kafka
    networks:
      fictizia_kafka:
        ipv4_address: 172.20.1.5

  mongo:
    restart: always
    image: mongo:latest
    container_name: mongo_db  
    ports:
      - "27017:27017"
    volumes:
      - ./mongoData:/data/db
    networks:
      fictizia_kafka:
        ipv4_address: 172.20.1.6

  mongo_api:
    restart: always
    build: ./api
    container_name: api 
    ports:
      - "5005:5005" 
    networks:
      fictizia_kafka:
        ipv4_address: 172.20.1.7

  manager:
    restart: always
    image: sheepkiller/kafka-manager:latest
    container_name: kafka_manager
    ports:
      - "9000:9000"
    environment: 
      - ZK_HOSTS=172.20.1.3
      - APPLICATION_SECRET=letmein
    networks:
      fictizia_kafka:
        ipv4_address: 172.20.1.8

networks:
  fictizia_kafka:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "true"
    ipam:
      driver: default
      config:
        - subnet: 172.20.1.0/24
